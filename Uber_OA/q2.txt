You are given an array of numbers, with each being a 0 or 1 . All 1s are arranged at the beginning of the array and 0s stand at the end.
A process is executed on this array until it halts. You are given a variable zerosToone , which
represents the number of 0s that can be deleted and exchanged for one 1.
Each second, one of the three events happen:
• Option 1: If there are at least zerosToOne zeros, then the last
zerostoone zeros are
removed and one 1 is added at the beginning of the array;
• Option 2: If there is at least one 1, the last 1 changesto o;
• Option 3: If neither Option 1 nor Option 2 can be completed, then the process halts.
Follow the process and compute how many seconds will pass until the process halts. Refer to the examples below for better understanding.
Note: You are not expected to provide the most optimal solution, but a solution with time complexity not worse than o (numbers. length x zerosToone?) will fit within the execution time limit.
Example
Example 1:
• For numbers = [1, 1, 1, 0, 0, 0] and zerosTone = 2, the output should be solution (numbers, zerosTone) = 13